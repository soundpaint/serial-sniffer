/*
 * serial-sniffer -- a serial port sniffer and logger
 *
 * Copyright (C) 2021 JÃ¼rgen Reuter
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * As a special exception to the GNU General Public License, if you
 * distribute this file as part of a program that contains a
 * configuration script generated by Autoconf, you may include it
 * under the same distribution terms that you use for the rest of that
 * program.
 *
 * For updates and more info or contacting the author, visit:
 * <https://github.com/soundpaint/serial-sniffer>
 *
 * Author's web site: www.juergen-reuter.de
 */

#ifndef SERIAL_SNIFFER_HH
#define SERIAL_SNIFFER_HH

#include <QtWidgets/QApplication>
#include <app-control.hh>
#include <about-dialog.hh>
#include <license-dialog.hh>
#include <main-window.hh>
#include <patch.hh>
#include <file-logger.hh>
#include <iconsole-logger.hh>

class Serial_sniffer : public App_control
{
  Q_OBJECT
public:
  explicit Serial_sniffer(int &argc, char **argv);
  virtual ~Serial_sniffer();
  void quit();
  void show_license();
  void show_about();
  void start_file_log();
  void stop_file_log();
  void start_console_log();
  void stop_console_log();
  void clear_console_log();
  void start_line(const uint32_t id);
  void stop_line(const uint32_t id);
  Config *get_config() const;
  void save_config(const std::string file_path) const;
  const std::vector<const IUart_info *> get_all_uarts() const;
  const IUart_info *get_uart_info(const uint32_t id) const;
public slots:
  void config_dirty_changed();
  const bool get_config_dirty() const;
private slots:
  void closing();
private:
  static const char *STYLE_SHEET_FILE_PATH;
  const char *_style_sheet;
  Config *_config;
  Patch *_patch;
  File_logger *_file_logger;
  IConsole_logger *_console_logger;
  Qt_actions *_actions;
  Main_window *_main_window;
  License_dialog *_license_dialog;
  About_dialog *_about_dialog;
  static const char *read_style_sheet(const char *file_path);
  void stop_threads();
};

#endif /* SERIAL_SNIFFER_HH */

/*
 * Local variables:
 *   mode: c++
 *   coding: utf-8
 * End:
 */
